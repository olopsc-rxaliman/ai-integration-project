import 'dart:io';
import 'dart:convert';

import 'package:google_generative_ai/google_generative_ai.dart';

class GeminiStudyHelper {
  final GenerativeModel _model;
  late final ChatSession _chat;

  GeminiStudyHelper()
      : _model = GenerativeModel(
          model: 'gemini-1.5-pro',
          apiKey: Platform.environment['GEMINI_API_KEY']!,
          generationConfig: GenerationConfig(
            temperature: 1,
            topK: 64,
            topP: 0.95,
            maxOutputTokens: 8192,
            responseMimeType: 'text/plain',
          ),
          systemInstruction: Content.system(
              'You are a highly knowledgeable and experienced tutor capable of explaining complex topics in a clear and concise manner. When I provide you with a topic, I want you to:\n\nBreak down the topic: Explain the core concepts, definitions, and underlying principles in a way that is easy to understand.\nProvide examples: Offer illustrative examples or case studies to reinforce the concepts and make them more concrete.\nAnswer questions: Be prepared to answer any questions I may have related to the topic.\nKey improvements:\n\nClearer expectations: The instruction explicitly outlines the desired behaviors and outputs from the chatbot.\nFocus on clarity and conciseness: The chatbot is instructed to explain topics in a way that is easy to understand.\nFlexibility: The instruction allows for questions and customization, making the chatbot more interactive.\n\nThe structure should be like this :\n\nAssuming you replace \'INSERT_INPUT_HERE\' with a relevant question about Introduction to Computing, the output would be similar to the pre-defined JSON structure in the system instruction. However, the actual content will be generated by the AI model based on its understanding of the topic and your specific question.\n\nFor example, if you ask "What are the different types of computer memory?", the response might be:\n\n{\n  "name": "Introduction to Computing",\n  "description": "...",  // (unchanged)\n  "breakdowns": [\n    // ... (unchanged breakdowns) \n  ],\n  "examples": [\n    // ... (unchanged examples)\n  ],\n  "guidance": [\n    // ... (unchanged guidance)\n  ],\n  }\n\nImportant Notes:\n1. Kindly refrain from using special characters that are used in Maps and Strings such as double quotes (") and single quotes (")\n2. If you have no idea on the given topic, respond with an empty map\n3. If you are going to respond with a sentence due to some reasons (e.g. the topic is vulgar), try your best to respond with a map adhering to the sample structure mentioned here. If responding with a sentence rather than a map is imminent, respond with this: {"error": "(reason for error)"}'),
        ) {
    _chat = _model.startChat(history: [
      Content.multi([
        TextPart('introduction to computing\n'),
      ]),
      Content.model([
        TextPart(
            '{\nname: "Introduction to Computing",\ndescription: "This topic provides a foundational understanding of what computers are, how they work, and their impact on our lives.",\nbreakdowns: [\n  { \nname: "What is a Computer?",\ndescription: "A computer is a programmable electronic device that accepts data (input), processes it, stores it, and produces output according to a set of instructions. These instructions are known as software, while the physical components are called hardware.",\n  },\n  {\nname: "Hardware",\ndescription: "The physical components of a computer system. This includes:",\nsub_breakdowns: [\n  {\n    name: "Input Devices",\n    description: "Used to enter data and instructions into the computer (e.g., keyboard, mouse, microphone)."\n  },\n  {\n    name: "Output Devices",\n    description: "Used to display or present processed data (e.g., monitor, printer, speakers)."\n  },\n  {\n    name: "Processing Unit (CPU)",\n    description: "The \'brain\' of the computer, executing instructions and performing calculations."\n  },\n  {\n    name: "Memory (RAM)",\n    description: "Temporary storage used to hold data and instructions actively being used by the CPU."\n  },\n  {\n    name: "Storage Devices",\n    description: "Used to store data permanently (e.g., hard drive, SSD, USB flash drive)."\n  }\n]\n  },\n  {\nname: "Software",\ndescription: "Sets of instructions (programs) that tell the hardware what to do. There are two main types:",\nsub_breakdowns: [\n  {\n    name: "System Software",\n    description: "Manages the computer\'s hardware and provides a platform for application software (e.g., operating systems like Windows or macOS)."\n  },\n  {\n    name: "Application Software",\n    description: "Programs designed for specific tasks or to solve particular problems (e.g., word processors, web browsers, games)."\n  }\n]\n  },\n  {\nname: "Data Representation",\ndescription: "Computers use binary code (0s and 1s) to represent all data, including text, numbers, images, and sound.",\n  },\n  {\nname: "Networks and the Internet",\ndescription: "Computers can be connected to share resources and communicate. The Internet is a global network of networks, enabling communication and access to vast amounts of information.",\n  },\n  {\nname: "Impact of Computing",\ndescription: "Computers have revolutionized nearly every aspect of modern life, from communication and entertainment to healthcare, education, and scientific research.",\n  }\n],\nexamples: [\n  "An example of an input device is a keyboard, and an example of an output device is a monitor.",\n  "Microsoft Word is an example of application software, while Windows 10 is an example of system software.",\n  "When you type a letter on a keyboard, the computer converts it into a binary code that it can understand and process."\n],\nguidance: [\n  "Start with the basics of computer hardware and software. There are many online resources and introductory books available.",\n  "Practice using different types of software applications to get familiar with their functionality.",\n  "Learn about the history of computing to gain a better understanding of its evolution and impact."\n]\n}\n'),
      ]),
      Content.multi([
        TextPart('general mathematics\n'),
      ]),
      Content.model([
        TextPart(
            '{\n  "name": "General Mathematics",\n  "description": "This encompasses a wide range of mathematical concepts and skills typically covered in elementary and middle school education. It forms the foundation for more advanced math topics.",\n  "breakdowns": [\n    {\n      "name": "Arithmetic",\n      "description": "The most fundamental branch of mathematics dealing with basic operations on numbers.",\n      "sub_breakdowns": [\n        {\n          "name": "Addition",\n          "description": "Combining two or more numbers to get their sum (e.g., 2 + 3 = 5)."\n        },\n        {\n          "name": "Subtraction",\n          "description": "Finding the difference between two numbers (e.g., 5 - 3 = 2)."\n        },\n        {\n          "name": "Multiplication",\n          "description": "Repeated addition of a number to itself (e.g., 2 x 3 = 6)."\n        },\n        {\n          "name": "Division",\n          "description": "Splitting a number into equal parts (e.g., 6 รท 3 = 2)."\n        }\n      ]\n    },\n    {\n      "name": "Fractions",\n      "description": "Represent parts of a whole or a ratio between two numbers.",\n      "sub_breakdowns": [\n        {\n          "name": "Numerator",\n          "description": "The top number of a fraction, indicating how many parts are taken."\n        },\n        {\n          "name": "Denominator",\n          "description": "The bottom number of a fraction, indicating the total number of equal parts."\n        }\n      ]\n    },\n    {\n      "name": "Decimals",\n      "description": "Another way to represent parts of a whole using a base-ten system.",\n      "sub_breakdowns": [\n        {\n          "name": "Decimal Point",\n          "description": "Separates the whole number part from the fractional part."\n        },\n        {\n          "name": "Place Value",\n          "description": "Each digit\'s position determines its value (e.g., tenths, hundredths, thousandths)."\n        }\n      ]\n    },\n    {\n      "name": "Percentages",\n      "description": "Expressing a part of a hundred (e.g., 50% means 50 out of every 100)."\n    },\n    {\n      "name": "Basic Algebra",\n      "description": "Using letters (variables) to represent unknown quantities and solving equations.",\n      "sub_breakdowns": [\n        {\n          "name": "Variables",\n          "description": "Symbols (usually letters) representing unknown values."\n        },\n        {\n          "name": "Equations",\n          "description": "Mathematical statements showing equality between two expressions."\n        }\n      ]\n    },\n    {\n      "name": "Geometry",\n      "description": "Study of shapes, sizes, properties, and spatial relationships.",\n      "sub_breakdowns": [\n        {\n          "name": "2D Shapes",\n          "description": "Flat shapes like squares, circles, and triangles."\n        },\n        {\n          "name": "3D Shapes",\n          "description": "Solid objects like cubes, spheres, and pyramids."\n        }\n      ]\n    }\n  ],\n  "examples": [\n    {\n      "name": "Arithmetic Example",\n      "description": "If you buy 5 apples and your friend gives you 3 more, you have a total of 5 + 3 = 8 apples."\n    },\n    {\n      "name": "Fraction Example",\n      "description": "If you cut a pizza into 8 slices and eat 3 slices, you have eaten 3/8 of the pizza."\n    },\n    {\n      "name": "Decimal Example",\n      "description": "The decimal 0.75 represents 75/100, which is equivalent to 3/4."\n    },\n    {\n      "name": "Percentage Example",\n      "description": "If you score 80% on a test, it means you answered 80 out of 100 questions correctly."\n    },\n    {\n      "name": "Algebra Example",\n      "description": "To find the value of \'x\' in the equation 2x + 5 = 11, you can solve for \'x\' to get x = 3."\n    }\n  ],\n  "guidance": [\n    {\n      "name": "Practice Regularly:",\n      "description": "Mathematics requires consistent practice. Work through numerous examples and problems to reinforce concepts."\n    },\n    {\n      "name": "Focus on Understanding:",\n      "description": "Don\'t just memorize formulas or procedures; strive to comprehend the underlying principles."\n    },\n    {\n      "name": "Utilize Online Resources:",\n      "description": "Websites like Khan Academy, Math is Fun, and Purplemath offer comprehensive lessons, practice exercises, and video tutorials."\n    },\n    {\n      "name": "Seek Help When Needed:",\n      "description": "Don\'t hesitate to ask your teacher, classmates, or a tutor for assistance when you encounter difficulties."\n    }\n  ]\n}'),
      ]),
      Content.multi([
        TextPart('arithmetic sequence\n'),
      ]),
      Content.model([
        TextPart(
            '{\n  "name": "Arithmetic Sequences",\n  "description": "A sequence is a list of numbers in a specific order. An arithmetic sequence is a specific type of sequence where the difference between any two consecutive terms is constant. This constant difference is called the common difference.",\n  "breakdowns": [\n    {\n      "name": "Common Difference",\n      "description": "The fixed value added to any term to get the next term in the sequence. It is denoted by \'d\'.",\n      "examples": [\n        "In the sequence 2, 4, 6, 8, the common difference is 2."\n      ]\n    },\n    {\n      "name": "Finding the nth Term",\n      "description": "The general formula to find the nth term (an) of an arithmetic sequence is: an = a1 + (n - 1) * d, where a1 is the first term, n is the term number, and d is the common difference.",\n      "examples": [\n        "To find the 10th term of the sequence 3, 7, 11, 15..., we use: a10 = 3 + (10-1) * 4 = 3 + 36 = 39"\n      ]\n    },\n    {\n      "name": "Finding the Sum of First n Terms",\n      "description": "The sum (Sn) of the first n terms of an arithmetic sequence is: Sn = n/2 * [2a1 + (n - 1) * d]",\n      "examples": [\n        "The sum of the first 5 terms of the sequence 1, 3, 5, 7... is: S5 = 5/2 * [2*1 + (5 - 1) * 2] = 25"\n      ]\n    }\n  ],\n  "examples": [\n    {\n      "name": "Example 1",\n      "description": "The sequence 5, 10, 15, 20... is an arithmetic sequence because the common difference is 5."\n    },\n    {\n      "name": "Example 2",\n      "description": "The sequence 10, 7, 4, 1... is an arithmetic sequence because the common difference is -3."\n    }\n  ],\n  "guidance": [\n    {\n      "name": "Identifying Arithmetic Sequences",\n      "description": "To identify if a sequence is arithmetic, find the difference between consecutive terms. If the difference is constant, it\'s an arithmetic sequence."\n    },\n    {\n      "name": "Applying Formulas",\n      "description": "Memorize the formulas for finding the nth term and the sum of an arithmetic sequence. Practice applying these formulas to different problems."\n    },\n    {\n      "name": "Real-world Applications",\n      "description": "Arithmetic sequences have applications in various fields, including finance, physics, and computer science. Look for patterns and relationships in real-world data to apply arithmetic sequences."\n    }\n  ],\n}'),
      ]),
      Content.multi([
        TextPart('sdafubdiubasc\n'),
      ]),
      Content.model([
        TextPart('{}'),
      ]),
      Content.multi([
        TextPart('drugs\n'),
      ]),
      Content.model([
        TextPart(
            '{\n  "name": "Drugs: Understanding Their Effects and Risks",\n  "description": "This topic provides an overview of drugs, including their classification, effects on the body and mind, potential risks, and the importance of responsible decision-making.",\n  "breakdowns": [\n    {\n      "name": "Drug Classification",\n      "description": "Drugs can be classified based on their effects and legal status.",\n      "sub_breakdowns": [\n        {\n          "name": "Stimulants",\n          "description": "Increase alertness, heart rate, and blood pressure (e.g., caffeine, nicotine, cocaine, amphetamines)."\n        },\n        {\n          "name": "Depressants",\n          "description": "Slow down brain function and heart rate (e.g., alcohol, benzodiazepines, barbiturates)."\n        },\n        {\n          "name": "Hallucinogens",\n          "description": "Alter perception, thoughts, and feelings (e.g., LSD, psilocybin mushrooms, MDMA)."\n        },\n        {\n          "name": "Opioids/Narcotics",\n          "description": "Relieve pain and induce euphoria (e.g., heroin, morphine, codeine, fentanyl)."\n        },\n        {\n          "name": "Cannabis",\n          "description": "Has a range of effects, including relaxation, altered perception, and euphoria (e.g., marijuana, hashish)."\n        },\n        {\n          "name": "Inhalants",\n          "description": "Chemical vapors that are inhaled to produce mind-altering effects (e.g., glue, paint thinner, aerosols)."\n        }\n      ]\n    },\n    {\n      "name": "Effects on the Body and Mind",\n      "description": "Drugs interfere with the normal functioning of the brain and body, leading to various short-term and long-term effects.",\n      "examples": [\n        "Short-term effects can include changes in mood, perception, heart rate, and coordination.",\n        "Long-term effects can include addiction, organ damage, mental health problems, and social consequences."\n      ]\n    },\n    {\n      "name": "Risks and Dangers",\n      "description": "Drug use carries significant risks, including:",\n      "sub_breakdowns": [\n        {\n          "name": "Addiction",\n          "description": "A chronic, relapsing brain disease characterized by compulsive drug seeking and use despite harmful consequences."\n        },\n        {\n          "name": "Overdose",\n          "description": "Taking a toxic dose of a drug, which can lead to serious health complications or death."\n        },\n        {\n          "name": "Withdrawal Symptoms",\n          "description": "Unpleasant physical and psychological symptoms that occur when a person stops using a drug they are addicted to."\n        },\n        {\n          "name": "Health Problems",\n          "description": "Organ damage, weakened immune system, mental health disorders, and other health issues."\n        },\n        {\n          "name": "Social Consequences",\n          "description": "Relationship problems, job loss, financial difficulties, and legal issues."\n        }\n      ]\n    }\n  ],\n  "examples": [\n    {\n      "name": "Stimulant Example",\n      "description": "Excessive caffeine intake can lead to anxiety, insomnia, and heart palpitations."\n    },\n    {\n      "name": "Depressant Example",\n      "description": "Mixing alcohol with other depressants can be extremely dangerous and can lead to respiratory depression and death."\n    }\n  ],\n  "guidance": [\n    {\n      "name": "Make Informed Decisions",\n      "description": "Educate yourself about the effects and risks of different drugs before making any decisions about drug use."\n    },\n    {\n      "name": "Seek Help If Needed",\n      "description": "If you or someone you know is struggling with drug use, there are resources available to help. Contact a local helpline, addiction treatment center, or healthcare professional."\n    },\n    {\n      "name": "Practice Harm Reduction",\n      "description": "If you choose to use drugs, take steps to minimize the risks, such as using in a safe environment, not mixing drugs, and having a naloxone kit available (if using opioids)."\n    }\n  ],\n}\n'),
      ]),
      Content.multi([
        TextPart('dick'),
      ]),
      Content.model([TextPart('{\n"error": "This topic is not appropriate for educational discussion"}')]),
    ]);
  }

  Future<Map> generateBreakdowns(String topic) async {
    try {
      final response = await _chat.sendMessage(Content.text(topic));
      Map responseMap = jsonDecode(response.text!);
      if (responseMap.isEmpty) {
        throw Exception("An error has occured");
      } else if (responseMap['error'] != null) {
        throw Exception("${responseMap['error']}");
      } else {
        return responseMap;
      }
    } catch (e) {
      rethrow;
    }
  }
}

// void main() async {
//   GeminiStudyHelper googleAI = GeminiStudyHelper();
//   try {
//     Map responseMap = await googleAI.generateBreakdowns('pussy');
//     print(responseMap);
//     print("Topic: ${responseMap['name']}");
//     print("Description: ${responseMap['description']}");
//   } catch (e) {
//     print("[ERROR] $e");
//   }
// }
