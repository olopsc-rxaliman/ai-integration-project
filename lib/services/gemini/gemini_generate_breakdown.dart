import 'dart:io';

import 'package:google_generative_ai/google_generative_ai.dart';

void main() async {
  final apiKey = Platform.environment['GEMINI_API_KEY'];
  if (apiKey == null) {
    stderr.writeln(r'No $GEMINI_API_KEY environment variable');
    exit(1);
  }

  final model = GenerativeModel(
    model: 'gemini-1.5-pro',
    apiKey: apiKey,
    generationConfig: GenerationConfig(
      temperature: 1,
      topK: 64,
      topP: 0.95,
      maxOutputTokens: 8192,
      responseMimeType: 'text/plain',
    ),
    systemInstruction: Content.system('You are a highly knowledgeable and experienced tutor capable of explaining complex topics in a clear and concise manner. When I provide you with a topic, I want you to:\n\nBreak down the topic: Explain the core concepts, definitions, and underlying principles in a way that is easy to understand.\nProvide examples: Offer illustrative examples or case studies to reinforce the concepts and make them more concrete.\nAnswer questions: Be prepared to answer any questions I may have related to the topic.\nKey improvements:\n\nClearer expectations: The instruction explicitly outlines the desired behaviors and outputs from the chatbot.\nFocus on clarity and conciseness: The chatbot is instructed to explain topics in a way that is easy to understand.\nFlexibility: The instruction allows for questions and customization, making the chatbot more interactive.\n\nThe structure should be like this :\n\nAssuming you replace \'INSERT_INPUT_HERE\' with a relevant question about Introduction to Computing, the output would be similar to the pre-defined JSON structure in the system instruction. However, the actual content will be generated by the AI model based on its understanding of the topic and your specific question.\n\nFor example, if you ask "What are the different types of computer memory?", the response might be:\n\nJSON\n{\n  "name": "Introduction to Computing",\n  "description": "...",  // (unchanged)\n  "breakdowns": [\n    // ... (unchanged breakdowns) \n  ],\n  "examples": [\n    // ... (unchanged examples)\n  ],\n  "guidance": [\n    // ... (unchanged guidance)\n  ],\n  }'),
  );

  final chat = model.startChat(history: [
    Content.multi([
      TextPart('trigonometry'),
    ]),
    Content.model([
      TextPart('```json\n{\n  "name": "Trigonometry",\n  "description": "Trigonometry is a branch of mathematics that studies relationships between side lengths and angles of triangles.",\n  "breakdowns": [\n    {\n      "title": "Core Concepts",\n      "content": "- **Angles:** Measured in degrees or radians, angles represent the amount of rotation between two rays.\\n- **Triangles:** Three-sided polygons, with a focus on right-angled triangles in trigonometry.\\n- **Trigonometric Ratios:** Sine (sin), cosine (cos), and tangent (tan) define relationships between an angle and ratios of side lengths in a right triangle."\n    },\n    {\n      "title": "Trigonometric Ratios in Right Triangles",\n      "content": "For a given angle θ in a right triangle:\\n- **Sine (sin θ):** Opposite side / Hypotenuse\\n- **Cosine (cos θ):** Adjacent side / Hypotenuse\\n- **Tangent (tan θ):** Opposite side / Adjacent side"\n    },\n    {\n      "title": "Unit Circle",\n      "content": "- A circle with radius 1 used to visualize trigonometric values for all angles.\\n- Points on the unit circle represent angles in standard position.\\n- The x-coordinate corresponds to cosine, and the y-coordinate corresponds to sine."\n    },\n    {\n      "title": "Trigonometric Identities",\n      "content": "- Equations that are true for all values of the variables.\\n- Examples include Pythagorean identities (sin²θ + cos²θ = 1), double-angle identities, and sum-to-product identities."\n    }\n  ],\n  "examples": [\n    {\n      "title": "Calculating Side Length",\n      "content": "In a right triangle, if the angle θ is 30 degrees and the hypotenuse is 10 units long, find the length of the opposite side.\\n\\nUsing sin θ = Opposite / Hypotenuse:\\nsin 30° = Opposite / 10\\nOpposite = 10 * sin 30° = 5 units"\n    },\n    {\n      "title": "Angle of Elevation",\n      "content": "An observer on the ground sees a bird at the top of a 20-meter tall tree at an angle of elevation of 60 degrees. How far is the observer from the base of the tree?\\n\\nUsing tan θ = Opposite / Adjacent:\\ntan 60° = 20 / Adjacent\\nAdjacent = 20 / tan 60° ≈ 11.55 meters"\n    }\n  ],\n  "guidance": [\n    {\n      "title": "Memorizing Trigonometric Values",\n      "content": "Memorize the trigonometric values for common angles (0°, 30°, 45°, 60°, 90°) using mnemonics or the unit circle."\n    },\n    {\n      "title": "Solving Trigonometric Equations",\n      "content": "Use algebraic techniques and trigonometric identities to solve equations involving trigonometric functions."\n    },\n    {\n      "title": "Applications of Trigonometry",\n      "content": "Explore real-world applications in fields like physics, engineering, navigation, and music."\n    }\n  ]\n}\n```'),
    ]),
  ]);
  final message = 'INSERT_INPUT_HERE';
  final content = Content.text(message);

  final response = await chat.sendMessage(content);
  print(response.text);
}